/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
//#include <dt-bindings/zmk/mouse.h>

&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <200>;
};
/*
&mmv {
   time-to-max-speed-ms = <680>;
   acceleration-exponent=<2>;
};
*/
/ {
        behaviors {
                hm: homerow_mods {
                        compatible = "zmk,behavior-hold-tap";
                        label = "HOMEROW_MODS";
                        #binding-cells = <2>;
                        tapping-term-ms = <200>;
                        quick_tap_ms = <0>;
                        flavor = "tap-preferred";
                        bindings = <&kp>, <&kp>;
                };
                td: tapdance {
                        compatible = "zmk,behavior-hold-tap";
                        label = "TAPDANCE";
                        #binding-cells = <2>;
                        tapping-term-ms = <150>;
                        quick_tap_ms = <0>;
                        flavor = "tap-preferred";
                        bindings = <&kp>, <&kp>;
                };
        };
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// | TAB  |  Q  |  W  |  F  |  P  |  B  |   |  J  |  L   |  U   |  Y  |  /  | DEL  |
// | GUI  |  A  |  R  |  S  |  T  |  G  |   |  M  |  N   |  E   |  I  |  O  | BKSP |
// | CTRL |  Z  |  X  |  C  |  D  |  V  |   |  K  |  H   |  ,   |  .  |  ;  |  '   |
//                    | SHF | ESC | SPC |   | ENT | L1   | BKSP |
                        bindings = <
   &kp TAB   &kp Q      &kp W      &kp F       &kp P &kp B   &kp J &kp L  &kp U       &kp Y      &kp FSLH   &kp DEL
   &sk LGUI  &hm LGUI A &hm LALT R &hm LCTRL S &kp T &kp G   &kp M &kp N  &hm LCTRL E &hm LALT I &hm LGUI O &kp BSPC
   &sk LCTRL &kp Z      &kp X      &kp C       &kp D &kp V   &kp K &kp H  &kp COMMA   &kp DOT    &kp SEMI   &kp SQT
               &sk LSHFT &mt LC(LS(LGUI)) SPACE &kp ESC    &to 1 &mt LC(LGUI) RET  &kp BSPC
                        >;
                };
                number_layer {
// -----------------------------------------------------------------------------------------
// | %    |  *  |  7  |  8  |  9  |  =  |   |  <  |  {  |  }   |  >  |  #  | DEL  |
// | GUI  |  /  |  4  |  5  |  6  |  +  |   |  ^  |  (  |  )   |  !  |  ;  | BKSP |
// | CTRL |  0  |  1  |  2  |  3  |  -  |   |  \  |  [  |  ]   |  @  |  $  | &    |
//                    | SHF | L0  | SPC |   | ENT | L2  | BKSP |
                        bindings = <
   &kp PRCNT &kp KP_MULTIPLY &kp N7 &kp N8 &kp N9 &kp EQUAL   &kp LT    &kp LBRC &kp RBRC &kp GT   &kp HASH &kp DEL
   &sk LGUI   &kp FSLH       &kp N4 &kp N5 &kp N6 &kp PLUS    &kp CARET &kp LPAR &kp RPAR &kp EXCL &kp SEMI &kp BSPC
   &sk LCTRL &kp N0          &kp N1 &kp N2 &kp N3 &kp MINUS   &kp BSLH  &kp LBKT &kp RBKT &kp AT   &kp DLLR &kp AMPS
                             &sk LSHFT &mt LC(LS(LGUI)) SPACE &to 0    &to 2 &mt LC(LGUI) RET  &kp BSPC
                        >;
                };
                
                nav_layer {
// -----------------------------------------------------------------------------------------
// | TAB  | F10 | F7  | F8  | F9  |  `  |   | PGU | HOME | UP   | END | PRT | DEL  |
// | GUI  | F11 | F3  | F4  | F5  |     |   | PGD | LFT  | DWN  | RHT |     | BKSP |
// | CTRL | F12 | F1  | F2  | F3  |     |   |     |      |      |     |     | L3   |
//                    | SHF | L0  | SPC |   | ENT |      | BKSP |
                        bindings = <
   &kp TAB   &kp F10 &kp F7 &kp F8 &kp F9 &kp GRAVE    &kp PG_UP &kp HOME  &kp UP   &kp END   &kp PSCRN &kp DEL
   &sk LGUI  &kp F11 &kp F4 &kp F5 &kp F6 &none        &kp PG_DN &kp LEFT &kp DOWN &kp RIGHT &none     &kp BSPC
   &sk LCTRL &kp F12 &kp F1 &kp F2 &kp F3 &none        &none     &none    &none    &none     &none     &to 3
                         &sk LSHFT &mt LC(LS(LGUI)) SPACE &to 0      &none &mt LC(LGUI) RET  &kp BSPC
                        >;
                };
                media_layer {
// -----------------------------------------------------------------------------------------
// | TAB  | BTC |     | PRV | NXT |     |   | SU  | LC | MU   | RC | PRT | DEL  |
// | GUI  |     | PLY | V-  | V+  |     |   | SD  | ML | MD   | MR |     | BKSP |
// | CTRL |     |     | BTP | BTN |     |   |     | SL |      | SR |     |      |
//                    | SHF | L0  | SPC |   | ENT |    | BKSP |
                        /*
                        bindings = <
   &kp TAB   &bt BT_CLR &none    &kp C_PREV   &kp C_NEXT   &none        &mwh SCROLL_UP   &mkp LCLK        &mmv MOVE_UP   &mkp RCLK         &kp PSCRN &kp DEL
   &sk LGUI  &none      &kp C_PP &kp C_VOL_DN &kp C_VOL_UP &none        &mwh SCROLL_DOWN &mmv MOVE_LEFT   &mmv MOVE_DOWN &mmv MOVE_RIGHT   &none     &kp BSPC
   &sk LCTRL &none      &none    &bt BT_PRV   &bt BT_NXT   &none        &none            &mwh SCROLL_LEFT &none          &mwh SCROLL_RIGHT &none     &none
                         &sk LSHFT &to 0 &mt LC(LS(LGUI)) SPACE     &mt LC(LGUI) RET &none &kp BSPC
                        >;
                        */
                        bindings = <
   &kp TAB   &bt BT_CLR &none    &kp C_PREV   &kp C_NEXT   &none        &kp PG_UP &kp HOME  &kp UP   &kp END   &kp PSCRN &kp DEL
   &sk LGUI  &none      &kp C_PP &kp C_VOL_DN &kp C_VOL_UP &none        &kp PG_DN &kp LEFT &kp DOWN &kp RIGHT &none     &kp BSPC
   &sk LCTRL &none      &none    &bt BT_PRV   &bt BT_NXT   &none        &none     &none    &none    &none     &none     &none
                         &sk LSHFT &mt LC(LS(LGUI)) SPACE &to 0         &none     &mt LC(LGUI) RET  &kp BSPC
                        >;
                };
        };
};

